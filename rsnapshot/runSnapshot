#!/bin/bash
#     Last Updated: 2011.11.21 (kormoc [at] gmail [dotta] com)
#
#  run_snapshot
#
#   runs rsnapshot on the rsnapshot-*.conf files in $DIR or in other 'standard'
#   dirs
#
#   Set the configuration variablses below to suit your preferences, and run:
#
#       ./run_snapshot
#
#   Cron run_snapshot to run every hour or so, and based on your configuration,
#   it will pick and choose which intervals to run.  This is much better than
#   setting up separate cron times for each interval because run_snapshot will
#   run intervals sequentially, for example making sure that "daily" does not
#   run until "weekly" has finished.
#
#   You can also pass in override intervals (including "du") to run specific
#   intervals manually:
#
#       ./run_snapshot du
#       ./run_snapshot weekly hourly
#

# Hourly snapshot runs every N hours, starting at HOURLY_MIN and ending at
# HOURLY_MAX.  Hourly snapshots will always be run at HOURLY_MAX, even if it is
# not a multiple of HOURLY_N.
    HOURLY_N=4
    HOURLY_MIN=8
    HOURLY_MAX=20

# Daily snapshot runs at hour $DAILY_H
    DAILY_H=22

# Weekly snapshot runs at hour $DAILY_H on weekday WEEKLY_D (0=Sunday)
    WEEKLY_D=0

# Monthly snapshot runs at hour $DAILY_H on MONTHLY_D day of the month
    MONTHLY_D=1

# Directory that holds the snapshot config files
# If left commented out, we will attempt to find them
#    DIR=/path/to/snapshots

# Retrys to attempt if rsnapshot fails for some reason
RETRY_ATTEMPTS=2

# Niceness level to run at. This only affects this side of the connection.
NICENESS=5

################################################################################
##     End the of config section.  Don't touch anything below this line.      ##
################################################################################

# Renice thyself
renice $NICENESS $$ &> /dev/null

# Get the absolute path of the script to also check for conf files
pushd `pwd` &> /dev/null
cd `dirname $0`
abspath=`pwd`
popd &> /dev/null

# Where are the config files located?
    for checkdir in `pwd` "$abspath" "/mnt/snapshots" "/var/snapshots"
    do
        if [ ! -d "$DIR" ]
        then
            ls $checkdir/rsnapshot-*.conf &> /dev/null
            if [ $? -eq "0" ]
            then
	        DIR="$checkdir"
            fi
        fi
    done

# Didn't find any valid directorys?
    if [ ! -d "$DIR" ]
    then
        echo "Can't find a valid config file directory. Failing..."
        exit
    fi

# No intervals passed in, define our own
    if [ -z "$1" ]; then
        INTERVALS=""
    # Get some date/time info
        hour=`date '+%k'`
        wday=`date '+%w'`
        mday=`date '+%d'`
    # Larger intervals all run at $DAILY_H
        if [ $hour -eq $DAILY_H ]; then
        # Monthly
            if [ $mday -eq $MONTHLY_D ]; then
                INTERVALS="$INTERVALS monthly"
            fi
        # Weekly
            if [ $wday -eq $WEEKLY_D ]; then
                INTERVALS="$INTERVALS weekly"
            fi
        # Don't forget to add the daily interval
            INTERVALS="$INTERVALS daily"
        fi
    # Hourly, too?
        if [ $hour -ge $HOURLY_MIN -a $hour -le $HOURLY_MAX ]; then
        # The % math should catch when $hour is $HOURLY_MIN, too
            if [ $hour -eq $HOURLY_MAX -o $(( ($hour - $HOURLY_MIN) % $HOURLY_N)) -eq 0 ]; then
                INTERVALS="$INTERVALS hourly"
            fi
        fi
# Use the supplied intervals instead
    else
        INTERVALS="$*"
    fi

# cd to where we want to go
    cd "$DIR"

# Run the requested intervals
    for INT in $INTERVALS; do

        echo "Interval:  $INT"

    # Just doing a du ?
        if [ "$INT" = "du" ]; then
            for CONF in rsnapshot-*.conf; do
            # Get the name of the server this snapshot is for
                SERV=`echo "$CONF" | sed -e 's/rsnapshot-\(.\+\?\)\.conf/\1/'`
            # Run the command
                echo "$SERV:"
                /usr/bin/rsnapshot -c "$CONF" du
                echo "";
            done

    # Diff?
        elif [ "$INT" = "diff" ]; then
            for CONF in `grep -Pl "^retain\s+daily\s" rsnapshot-*.conf`; do
            # Get the name of the server this snapshot is for
                SERV=`echo "$CONF" | sed -e 's/rsnapshot-\(.\+\?\)\.conf/\1/'`
                RPATH=`grep snapshot_root "${CONF}" | awk '{ print $2 }'`
                A=`find $RPATH -maxdepth 1 -type d -name daily.\* -mtime -3 | sort | head -n 2 | head -n 1`
                B=`find $RPATH -maxdepth 1 -type d -name daily.\* -mtime -3 | sort | head -n 2 | tail -n 1`
                AP=`echo ${A} | awk -F/ '{ print $NF }'`
                BP=`echo ${B} | awk -F/ '{ print $NF }'`

            # Run the command
                echo "$SERV ($AP $BP):"
                /usr/bin/rsnapshot-diff -v $A $B | egrep '^[-\+ ]+' | sort | sed -e "s#${A}##g" -e "s#${B}##g" > /tmp/runSnapshot.diff
                for path in `grep -e '^- ' /tmp/runSnapshot.diff | awk '{ print $2 }'`
                do
                    grep -e "^+ ${path}$" /tmp/runSnapshot.diff &> /dev/null
                    if [ "$?" -eq "0" ]
                    then
                        sed -i'' -e "s#^+ ${path}#C ${path}#g" -e "s#^- ${path}##g" /tmp/runSnapshot.diff
                    fi
                done
                sed -i'' -e 's#^-#D#g' -e 's#^+#A#g' /tmp/runSnapshot.diff
                sed -i'' ':a;N;$!ba;s/\n[\n\ \t\r\n\f]\+/\n/g' /tmp/runSnapshot.diff
                sed -i'' -e 's/^+ /+  /g' -e 's/^- / - /g' /tmp/runSnapshot.diff
                cat /tmp/runSnapshot.diff | tail -n 100
                echo ""
                rm /tmp/runSnapshot.diff
            done

    # Scan for which config files use this interval
        else
            for CONF in `grep -Pl "^retain\s+$INT\s" rsnapshot-*.conf`; do
            # Get the name of the server this snapshot is for
                SERV=`echo "$CONF" | sed -e 's/rsnapshot-\(.\+\?\)\.conf/\1/'`
            # When did we start?
                TIME=`date +%s`
            # Print out a message
                echo -n "rsnapshot $INT:  $SERV"
            # Add some smart trailing whitespace to the preferred length
                LEN=$((40 - `expr length "$INT$SERV"`))
                for (( i=0; i < "$LEN"; i++ )); do
                    echo -n " "
                done
            # Run the backup and retry if needed
                attempt=0
                while [ "$attempt" -lt "$RETRY_ATTEMPTS" ]
                do
                 let attempt=$attempt+1
                 /usr/bin/rsnapshot -c "$CONF" "$INT"
                 if [ "$?" -eq 0 ]
                 then
                  break
                 fi
                done
                if [ "$attempt" -eq "$RETRY_ATTEMPTS" ]
                then
                 echo "Rsync failed after $attempt trys"
                fi
            # How long did it take?
                TIME=$((`date +%s` - $TIME))
            # Default times
                HRS=0
                MINS=0
            # Print out a nice final time
                if [ $TIME -ge 3600 ]; then
                    HRS=$((($TIME - ($TIME % 3600)) / 3600))
                    TIME=$(($TIME % 3600))
                    echo -n "$HRS""h"
                fi
                if [ "$TIME" -ge 60 ]; then
                    MINS=$((($TIME - ($TIME % 60)) / 60))
                    TIME=$(($TIME % 60))
                    echo -n "$MINS""m"
                fi
                if [ "$TIME" -gt 0 -o "$MINS" -lt 1 ]; then
                    echo -n "$TIME""s"
                fi
                echo ""
            done
        fi
    done
